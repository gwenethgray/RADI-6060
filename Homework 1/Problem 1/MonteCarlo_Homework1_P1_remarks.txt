In Problem 1C, I found that the intrinsic C++ random number generator algorithm had very similar performance to the multiplicative congruential (MC) algorithm on the moments tests for N=100, N=1000, and N=10,000, with only one test result (the 1st moment for N=1000) differing between the two. Both algorithms failed every moment test at N=100, passed every one at N=10,000, and passed every one at N=1000 (except for the MC RNG, which failed k=1).

At N=100, the MC RNG had moment discrepancies between 0.0371 (k=1) and 0.0183 (k=5), all failing; and the intrinsic RNG also had no passing results, but its discrepancies were larger: 0.0576 (k=1) to 0.0271 (k=5). At N=1000, the intrinsic RNG was markedly more accurate than the MC RNG, with the former's discrepancies ranging from 0.0012 (k=1) to 0.0000 (k=4) and the latter's a whole order of magnitude larger, ranging from 0.0104 (k=1) to 0.0033 (k=5). The discrepancies became closer again for N=10,000, when the intrinsic RNG ranged from 0.0068 (k=2 and k=3) to 0.0057 (k=1) and the MC RNG ranged from 0.0052 (k=2) to 0.0031 (k=5).

The frequency tests yielded very close results for large N (chi-squared = 12.3920 for intrinsic RNG and chi-squared = 14.5680 for MC RNG at N=10,000), somewhat close results for N=1000 (8.6800 for intrinsic, 10.8800 for MC), and very different results for N=100 (17 for intrinsic, 5.4 for MC) which can be explained by undersampling.


In Problem 1D, the results of the two-level frequency test for the two algorithms were identical at the first level except for one group each in the N=100 and N=1000 runs; and at the second level the results were similar for lower N but differed greatly for N=10,000. The intrinsic RNG had passing frequency test results for all first level subgroups except one in the N=1000 run, whereas the MC RNG had passing results in all tests but one at N=100. Second level chi-squared values for the intrinsic RNG were 18 at N=100, 6 at N=1000, and 16 at N=10,000; and for the MC RNG, they were also 18 at N=100, but 8 at N=1000, and 4 at N=10,000. Second level sampling here involved binning only ten chi-squared values into as many bins, which is extreme undersampling.